@model TaxonomyPrj2.ViewModels.IndexCategoriesViewModel;

@{
    Layout = null;
}
@functions
{

    

    public void MakeTreeInViev(DAL.Models.Category top, int level)  // ч/б версия
    {
        level++;
        if (level > 5) { level = 1; }

        Model.InView += "<li>"; // открываем первый li
        if (top.InverseParentNavigation.Count != 0)  // выбираем кнопку перед категорией. 
        {
            Model.InView += " <button class=\"btn btn-outline-dark h1\" onclick=\"clickUL(this)\">-</button>&nbsp;";  // скрыть или показать ветку через скрипт
        }
        else
        {
            Model.InView += " <button class=\"btn btn-outline-secondary h1\" >...</button>&nbsp;&nbsp;";
        }
        // ставим название
        Model.InView += "<span class=\"h2\">" + top.NameCat + " " + top.Name + "&nbsp;&nbsp;</span>";
        Model.InView += "<button type = \"button\" data-id=\"" + top.Id + "\" class=\"redactCategory btn btn-outline-warning  ProtectionAgainstRoleChanges\">Р</button>&nbsp;"; // редактирование
        Model.InView += "<button type = \"button\" data-id=\"" + top.Id + "\" class=\""; // половина кнопки delete
        if (CanDelete(top)) // актив или неактив кнопка delete
        {
            Model.InView += "deleteCategory btn btn-outline-danger  ProtectionAgainstRoleChanges\">У</button>";
        }
        else
        {
            Model.InView += " btn btn-outline-secondary \">У</button>";
        }

      

        // кнопка описания, которая скрывает/ показывает описание через скрипт
        Model.InView += "<span> ";
        Model.InView += "<button type = \"button\" data-id=\"" + top.Id + "\" class=\"btn btn-outline-success  ProtectionAgainstRoleChanges\" onclick=\"clickDescr(this)\">О</button>";
        Model.InView += "<div  class=\"hideChild\"> " + top.Description + "</div></button></span>";
        

        if (top.InverseParentNavigation.Count != 0) // если есть потомки - строим ul
        {

            Model.InView += "<ul class=\"gray_" + level + "\">"; // открываем ul

            foreach (var item in top.InverseParentNavigation)
            {
                MakeTreeInViev(item, level);
            }
            Model.InView += "</ul>";  // закрываем ul

        }


        Model.InView += "</li>"; // закрываем  первый  li

    }

    private bool CanDelete(DAL.Models.Category element)
    {
        if (element.InverseParentNavigation.Count != 0 || element.Organisms.Count != 0)
        {
            return false;
        }

        return true;
    }
}


@{
   

    int levelGray = 0; // ч/б версия
    MakeTreeInViev(Model.CategoryTree.FirstOrDefault(), levelGray);
    Model.InView = "<ul class=\"gray_" + "\"> " + Model.InView + "</ul>";
}

<div id="tree" class="h5" data-id="@Model.InView">@Html.Raw(Model.InView)</div>







